package services;

import java.io.IOException;
import java.sql.*;
import java.util.*;
import com.pl.projectfiles.*;

public class ClientDBManager {

	private Connection conn;
	private Statement stmt;
	private PreparedStatement addPersonStmt;
	private PreparedStatement getPersonsStmt;
	private PreparedStatement deletePersonStmt;

	
	public ClientDBManager() {
		
		
		Properties props = new Properties();
		
		try {		
			props.load(ClassLoader.getSystemResourceAsStream("com/pl/resources/jdbc.properties"));
		} catch (IOException e) {
				e.printStackTrace();
		}
		
		
		
		try {
			
			conn = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/workdb");
			stmt = conn.createStatement();
			boolean customerTableExists = false;

			ResultSet rs = conn.getMetaData().getTables(null, null, null, null);

			while(rs.next()) {
				if("Client".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					customerTableExists = true;
					break;
				}
			}


			if(!customerTableExists) {
				stmt.executeUpdate("" +
						"CREATE TABLE client(" +
						"id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY," +
						"firstName varchar(20)," +
						"surname varchar(20)," +
						")");
			}

			addPersonStmt = conn.prepareStatement("" +
					"INSERT INTO client (name, surname) VALUES (?, ?)" +
					"");

			getPersonsStmt = conn.prepareStatement("" +
					"SELECT * FROM client" +
					"");



		} catch (SQLException e) {

			e.printStackTrace();
		}
	}

	public void addClient(Client client) {
		try {
			addPersonStmt.setString(1, client.getFirstsName());
			addPersonStmt.setString(2, client.getSurname());
			addPersonStmt.executeUpdate();

		} catch (SQLException e) {

			e.printStackTrace();
		}

	}

	public List<Client> getAllClient() {
		List<Client> cl = new ArrayList<Client>();

		try {
			ResultSet rs = getPersonsStmt.executeQuery();

			while(rs.next()) {
				cl.add(new Client(rs.getString("firstName"), rs.getString("surname")));
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}

		return cl;
	}
	
	public void deleteAllClients() {
		try {
			deletePersonStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}




}